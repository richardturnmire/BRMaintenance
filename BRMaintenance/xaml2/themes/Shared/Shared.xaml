<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="http://schemas.componentone.com/wpf/C1DataGrid"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    >
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/xaml/themes/Shared/ItemPresenterStyles.xaml" />
		<ResourceDictionary Source="/xaml/themes/Shared/SharedIndicators.xaml" />
		<ResourceDictionary Source="/xaml/themes/Shared/TypeBasedCellStyles.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<sys:Double x:Key="DefaultColumnWidth">150</sys:Double>
	<sys:Double x:Key="DefaultColumnHeight">30</sys:Double>
	<sys:Double x:Key="DefaultMinItemCellWidth">100</sys:Double>

	<!-- Default C1DataGrid ControlTemplate (C1DataGrid.Template property) -->
	<ControlTemplate x:Key="DefaultGridTemplate" TargetType="{x:Type local:C1DataGrid}">
		<Border Name="brd" Background="{TemplateBinding Background}" 
			BorderBrush="{TemplateBinding BorderBrush}" 
			BorderThickness="{TemplateBinding BorderThickness}">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition/>
				</Grid.RowDefinitions>
				<local:GroupByPresenter MinHeight="40"/>
				<local:SplitsPresenter Grid.Row="1"/>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Background" Value="{x:Null}">
				<Setter TargetName="brd" Property="Background" 
					Value="{DynamicResource C1DataGrid_Brush}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<!-- Split Cell Template for views with vertical rows distribution 
	(C1DataGrid.SplitCellTemplate property) -->
	<ControlTemplate x:Key="DefaultVerticalSplitCellTemplate">
		<Grid >
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
			<local:ScrollSynchronizer Grid.Row="0" 
					ScrollViewer="{Binding ItemsScrollViewer, ElementName=itemsPresenter}"
					SynchronizeHorizontally="true">
				<local:HeaderPresenter/>
			</local:ScrollSynchronizer>
			<local:ScrollSynchronizer Grid.Row="1" 
					ScrollViewer="{Binding ItemsScrollViewer, ElementName=itemsPresenter}"
					SynchronizeHorizontally="true">
				<local:FilterBarPresenter />
			</local:ScrollSynchronizer>
			<local:ScrollSynchronizer Grid.Row="2" 
				ScrollViewer="{Binding ItemsScrollViewer, ElementName=itemsPresenter}"
				SynchronizeHorizontally="true">
				<local:GridAddNewItem VisibilityCondition="InHeader" 
					ContentIndentDirection="Horizontal"/>
			</local:ScrollSynchronizer>
			<local:GridItemsPresenter Name="itemsPresenter"  Grid.Row="3" 
               ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
               ScrollViewer.VerticalScrollBarVisibility="Hidden"/>
            <local:ScrollSynchronizer Grid.Row="4" 
					ScrollViewer="{Binding ItemsScrollViewer, ElementName=itemsPresenter}"
					SynchronizeHorizontally="true">
               
            </local:ScrollSynchronizer>
        </Grid>
	</ControlTemplate>

	<!-- Split Cell Template for views with horizontal rows distribution 
	(C1DataGrid.SplitCellTemplate property) -->
	<ControlTemplate x:Key="DefaultHorizontalSplitCellTemplate">
		<Grid >
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<local:ScrollSynchronizer 
                ScrollViewer="{Binding ItemsScrollViewer, ElementName=itemsPresenter}"
                SynchronizeVertically="true">
				<local:HeaderPresenter />
			</local:ScrollSynchronizer>
			<local:ScrollSynchronizer Grid.Column="1" 
                ScrollViewer="{Binding ItemsScrollViewer, ElementName=itemsPresenter}"
                SynchronizeVertically="true">
				<local:FilterBarPresenter />
			</local:ScrollSynchronizer>
			<local:ScrollSynchronizer Grid.Column="2" 
                ScrollViewer="{Binding ItemsScrollViewer, ElementName=itemsPresenter}"
                SynchronizeVertically="true">
				<local:GridAddNewItem VisibilityCondition="InHeader" 
					ContentIndentDirection="Vertical"/>
			</local:ScrollSynchronizer>
			<local:GridItemsPresenter Name="itemsPresenter" Grid.Column="3"  
               ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
               ScrollViewer.VerticalScrollBarVisibility="Hidden" 
			/>
            <local:ScrollSynchronizer Grid.Column="4" 
                ScrollViewer="{Binding ItemsScrollViewer, ElementName=itemsPresenter}"
                SynchronizeVertically="true">
               
            </local:ScrollSynchronizer>
        </Grid>
	</ControlTemplate>

	<!-- Split Cell Template for Card view
	(C1DataGrid.SplitCellTemplate property) -->
	<ControlTemplate x:Key="DefaultCardSplitCellTemplate">
        <DockPanel>
           
            <Grid >
			<Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition/>
			</Grid.RowDefinitions>
            <local:ScrollSynchronizer 
                ScrollViewer="{Binding ItemsScrollViewer, ElementName=itemsPresenter}"
                SynchronizeVertically="true">
				<local:HeaderPresenter />
			</local:ScrollSynchronizer>
			<local:ScrollSynchronizer Grid.Column="1" 
                ScrollViewer="{Binding ItemsScrollViewer, ElementName=itemsPresenter}"
                SynchronizeVertically="true">
				<local:GridAddNewItem VisibilityCondition="InHeader"/>
			</local:ScrollSynchronizer>
			<local:GridItemsPresenter Name="itemsPresenter" Grid.Column="2"  
               ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
               ScrollViewer.VerticalScrollBarVisibility="Hidden" 
			/>
		</Grid>
        </DockPanel>
	</ControlTemplate>

    <!-- Split Cell Template for Carousel view
	(C1DataGrid.SplitCellTemplate property) -->
    <ControlTemplate x:Key="DefaultCarouselSplitCellTemplate">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <local:ScrollSynchronizer 
                ScrollViewer="{Binding ItemsScrollViewer, ElementName=itemsPresenter}"
                SynchronizeVertically="true">
                    <local:HeaderPresenter />
                </local:ScrollSynchronizer>
                <local:ScrollSynchronizer Grid.Column="1" 
                ScrollViewer="{Binding ItemsScrollViewer, ElementName=itemsPresenter}"
                SynchronizeVertically="true">
                    <local:GridAddNewItem VisibilityCondition="InHeader"/>
                </local:ScrollSynchronizer>
                <local:GridItemsPresenter Name="itemsPresenter" Grid.Column="2"  
               ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
               ScrollViewer.VerticalScrollBarVisibility="Hidden" 
			/>
            </Grid>
    </ControlTemplate>


    <!-- Panel that lays out items for views with vertical items distribution 
	(C1DataGrid.ItemsPanelTemplate property)  -->
	<ItemsPanelTemplate x:Key="DefaultVerticalItemsPanelTemplate">
	<!-- pf1 -->
		<local:C1VirtualizingStackPanel />
		<!--
		<VirtualizingStackPanel />
		-->
	</ItemsPanelTemplate>

	<!-- Panel that lays out items for views with horizontal items distribution 
	(C1DataGrid.ItemsPanelTemplate property)  -->
	<ItemsPanelTemplate x:Key="DefaultHorizontalItemsPanelTemplate">
		<local:C1VirtualizingStackPanel Orientation="Horizontal"/>
	</ItemsPanelTemplate>

	<ItemsPanelTemplate x:Key="DefaultCarouselItemsPanelTemplate">
		<local:C1CarouselPanel/>
	</ItemsPanelTemplate>

	<!-- Panel that lays out item cells horizontally 
	(C1DataGrid.CellsAutoLayoutPanelTemplate property) -->
	<ItemsPanelTemplate x:Key="DefaultHorizontalCellsLayoutPanelTemplate">
		<StackPanel Orientation="Horizontal"/>
	</ItemsPanelTemplate>

	<!-- Panel that lays out item cells vertically 
	(C1DataGrid.CellsAutoLayoutPanelTemplate property) -->
	<ItemsPanelTemplate x:Key="DefaultVerticalCellsLayoutPanelTemplate">
		<StackPanel Orientation="Vertical"/>
	</ItemsPanelTemplate>


	<!-- Panel that lays out child list cells in an item with horizontal
	ordinary cells distribution (C1DataGrid.ListCellsAutoLayoutPanelTemplate property) -->
	<ItemsPanelTemplate x:Key="DefaultHorizontalListlCellsLayoutPanelTemplate">
		<UniformGrid Rows="0" Columns="1"/>
	</ItemsPanelTemplate>

	<!-- Panel that lays out child list cells in an item with vertical
	ordinary cells distribution (C1DataGrid.ListCellsAutoLayoutPanelTemplate property) -->
	<ItemsPanelTemplate x:Key="DefaultVerticalListlCellsLayoutPanelTemplate">
		<UniformGrid Rows="1" Columns="0"/>
	</ItemsPanelTemplate>


	<!-- (C1DataGrid.ColumnFilterCellTemplate property) -->
	<ControlTemplate x:Key="DefaultColumnFilterCellTemplate">
		<local:ColumnFilterCellContentPresenter Margin="3"/>
	</ControlTemplate>

	<!-- (C1DataGrid.GroupByCellsAutoLayoutPanelTemplate property) -->
	<ItemsPanelTemplate x:Key="DefaultGroupByCellsLayoutPanelTemplate">
		<local:StairsPanel />
	</ItemsPanelTemplate>

	<!-- (C1Datarid.GroupByContentTemplate property) -->
	<ControlTemplate x:Key="DefaultGroupByContentTemplate">
		<Border Background="Transparent">
			<local:GroupByCellsAutoLayoutPresenter/>
		</Border>
	</ControlTemplate>

	<ControlTemplate x:Key="DefaultUniversalCardItemContentTemplate">
		<local:CellsAutoLayoutPresenter/>
	</ControlTemplate>

	<ControlTemplate x:Key="DefaultCardCellTemplate">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition MaxWidth="100"/>
				<ColumnDefinition MinWidth="100"/>
			</Grid.ColumnDefinitions>
			<local:HeaderCellPresenter ColumnName="{Binding Column.ColumnName}"/>
			<local:ItemCellContentPresenter Margin="5,2,0,0" Grid.Column="1"/>
		</Grid>
	</ControlTemplate>

	<ControlTemplate x:Key="DefaultCardHeaderCellTemplate">
		<local:HeaderCellContentPresenter />
	</ControlTemplate>

	<ControlTemplate x:Key="DefaultCardHeaderCellContentTemplate"
                     TargetType="local:ContentCellPresenterBase">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<TextBlock Text="{Binding Column.Caption, 
                Converter={x:Static local:EnsureSuffixConverter.Default}, 
                ConverterParameter=:}" Padding="2,5,0,0"  
				                 
                FontWeight="Bold"/>
			<local:SortDirectionIndicator Grid.Column="1" Margin="1, 5,0,0"/>
		</Grid>
	</ControlTemplate>





	<!-- Style for ColumnResizer -->
	<Style TargetType="local:ColumnResizer">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:ColumnResizer">
					<Grid>
						<Border Background="Transparent" BorderThickness="0"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


</ResourceDictionary>